name: Electron Builder
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  MacBuild:
    runs-on: macos-latest
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      APPLE_PROVIDER: ${{ secrets.APPLE_PROVIDER }}
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - uses: actions/github-script@v5
        id: should-publish
        with:
          result-encoding: string
          script: |
            const script = require('./check-for-version-bump.js');
            return await script({ github, context, core })

      - uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

      - name: Install deps
        run: yarn install

      - name: Electron rebuild
        # Ignore when this fails, its a total hack but for some reason
        # electron forge only builds on start, run-as-node forces it to crash out
        run: yarn start --run-as-node || true

      - name: Forge publish
        if: ${{ steps.should-publish.outputs.result == 'publish' }}
        run: yarn run publish

      - name: Forge make
        if: ${{ steps.should-publish.outputs.result == 'make' }}
        run: yarn make

      - uses: actions/upload-artifact@v2
        with:
          name: MacRelease
          path: out/make/EyeCommander.dmg
          # Github has size limits so this avoids hitting them
          retention-days: 1

  WindowsBuild:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      WIN_CERT: ${{ secrets.WIN_CERT }}
      WIN_CERT_PASSWORD: ${{ secrets.WIN_CERT_PASSWORD }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Output cert file
        run: echo $WIN_CERT | base64 --decode > ./win-cert.pfx

      - uses: actions/github-script@v5
        id: should-publish
        with:
          result-encoding: string
          script: |
            const script = require('./check-for-version-bump.js');
            return await script({ github, context, core })

      - name: Echo path
        continue-on-error: true
        run: echo $env:LOCALAPPDATA

      - name: Print path 1
        continue-on-error: true
        run: ls C:\Users\runneradmin\AppData\Roaming

      - name: Print path 2
        continue-on-error: true
        run: ls C:\Users\runneradmin\AppData\Roaming\npm

      - name: Remove cache
        continue-on-error: true
        run: rm -r $env:LOCALAPPDATA/node-gyp/Cache

      - name: Install new node-gyp
        run: npm i -g node-gyp@9.0.0 --verbose

      - name: Print path 3
        continue-on-error: true
        run: ls C:\npm

      - name: Where is node-gyp
        continue-on-error: true
        run: where node-gyp

      - name: Try a full list
        continue-on-error: true
        run: dir /s /b /a:d

      - name: Show npm config
        continue-on-error: true
        run: npm config ls -l

      - name: Use new node-gyp
        run: npm config set node_gyp "./node_modules/node-gyp/bin/node-gyp.js"

      - name: Install deps
        run: yarn install

      - name: Electron rebuild
        # Ignore when this fails, its a total hack but for some reason
        # electron forge only builds on start, run-as-node forces it to crash out
        run: yarn start --run-as-node || true

      - name: Forge publish
        if: ${{ steps.should-publish.outputs.result == 'publish' }}
        run: yarn run publish

      - name: Forge make
        if: ${{ steps.should-publish.outputs.result == 'make' }}
        run: yarn make

      - uses: actions/upload-artifact@v2
        with:
          name: WindowsRelease
          path: out
          # Github has size limits so this avoids hitting them
          retention-days: 1

  LinuxBuild:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - uses: actions/github-script@v5
        id: should-publish
        with:
          result-encoding: string
          script: |
            const script = require('./check-for-version-bump.js');
            return await script({ github, context, core })

      - name: Install linux deps
        run: sudo apt-get install -y libxml2-utils libxtst-dev libpng++-dev

      - name: Install deps
        run: yarn install

      - name: Electron rebuild
        # Ignore when this fails, its a total hack but for some reason
        # electron forge only builds on start, run-as-node forces it to crash out
        run: yarn start --run-as-node || true

      - name: Forge publish
        if: ${{ steps.should-publish.outputs.result == 'publish' }}
        run: yarn run publish

      - name: Forge make
        if: ${{ steps.should-publish.outputs.result == 'make' }}
        run: yarn make

      - uses: actions/upload-artifact@v2
        with:
          name: LinuxRelease
          path: out
          # Github has size limits so this avoids hitting them
          retention-days: 1
